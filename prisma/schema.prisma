generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  createAt   DateTime @default(now())
  email      String   @unique
  login      String   @unique
  name       String   @default("")
  surname    String   @default("")
  password   String
  phone      String   @default("")
  dateBorn   DateTime @default("2019-10-12T07:20:50.52Z") @map("date_born")
  avatarPath String   @default("") @map("avatar_path")
  address Address[]
  favorite   Favorite[]
}

model Countries {
  id Int @id @default(autoincrement())
  name String @unique
  flagPath String
}

model Cities {
  id Int @id @default(autoincrement())
  name String @unique
}

model Category {
  id       Int        @id @default(autoincrement())
  createAt DateTime   @default(now())
  name     String     @default("")
  children Category[] @relation("SubCategories")
  parent   Category?  @relation("SubCategories", fields: [parentId], references: [id], onDelete: Cascade)
  parentId Int?
  product  Product[]
}

model Address {
  id Int @id @default(autoincrement())
  createAt DateTime   @default(now())
  street String
  streetNumber Int @map("street_number") @default(0)
  flat Int @default(0)
  entrance Int @default(0) //подъезд 
  floor Int @default(0) //этаж
  User    User? @relation(fields: [userId], references: [id])
  userId  Int? @map("user_id")
}

model Product {
  id          Int       @id @default(autoincrement())
  createAt    DateTime  @default(now())
  name        String    @default("")
  weight      Int       @default(0)
  description String    @default("")
  price       Int       @default(0)
  productPath String    @default("")
  Category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  favorite                Favorite[]
}

model Favorite {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @map("user_id")
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int      @map("product_id")
}
